{"ast":null,"code":"'use strict';import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import Platform from\"../../../exports/Platform\";import RCTDeviceEventEmitter from\"./RCTDeviceEventEmitter\";import invariant from'fbjs/lib/invariant';var NativeEventEmitter=function(){function NativeEventEmitter(nativeModule){_classCallCheck(this,NativeEventEmitter);if(Platform.OS==='ios'){invariant(nativeModule!=null,'`new NativeEventEmitter()` requires a non-null argument.');this._nativeModule=nativeModule;}}_createClass(NativeEventEmitter,[{key:\"addListener\",value:function addListener(eventType,listener,context){var _this=this;var _this$_nativeModule;(_this$_nativeModule=this._nativeModule)==null?void 0:_this$_nativeModule.addListener(eventType);var subscription=RCTDeviceEventEmitter.addListener(eventType,listener,context);return{remove:function remove(){if(subscription!=null){var _this$_nativeModule2;(_this$_nativeModule2=_this._nativeModule)==null?void 0:_this$_nativeModule2.removeListeners(1);subscription.remove();subscription=null;}}};}},{key:\"removeListener\",value:function removeListener(eventType,listener){var _this$_nativeModule3;(_this$_nativeModule3=this._nativeModule)==null?void 0:_this$_nativeModule3.removeListeners(1);RCTDeviceEventEmitter.removeListener(eventType,listener);}},{key:\"emit\",value:function emit(eventType){for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}RCTDeviceEventEmitter.emit.apply(RCTDeviceEventEmitter,[eventType].concat(args));}},{key:\"removeAllListeners\",value:function removeAllListeners(eventType){var _this$_nativeModule4;invariant(eventType!=null,'`NativeEventEmitter.removeAllListener()` requires a non-null argument.');(_this$_nativeModule4=this._nativeModule)==null?void 0:_this$_nativeModule4.removeListeners(this.listenerCount(eventType));RCTDeviceEventEmitter.removeAllListeners(eventType);}},{key:\"listenerCount\",value:function listenerCount(eventType){return RCTDeviceEventEmitter.listenerCount(eventType);}}]);return NativeEventEmitter;}();export{NativeEventEmitter as default};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}