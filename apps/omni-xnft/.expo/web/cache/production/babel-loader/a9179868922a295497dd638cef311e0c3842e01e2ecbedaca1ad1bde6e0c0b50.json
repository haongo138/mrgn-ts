{"ast":null,"code":"import compareVersions from'compare-versions';import{CodedError}from\"./errors/CodedError\";var postedWarnings={};export default function deprecate(library,deprecatedAPI){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var currentVersion=options.currentVersion,versionToRemove=options.versionToRemove,replacement=options.replacement;var code=codeFromLibrary(library);var key=`${code}:${deprecatedAPI}:${replacement}`;if(!postedWarnings[key]){postedWarnings[key]=true;}if(!currentVersion||!versionToRemove||compareVersions(currentVersion,versionToRemove)>=0){var _message=`\\`${deprecatedAPI}\\` has been removed`;if(versionToRemove){_message=`${_message} as of version \"${versionToRemove}\"`;}if(replacement&&replacement.length){_message=`${_message} please migrate to: \\`${replacement}\\``;}throw new CodedError(`ERR_DEPRECATED_API`,prependLibrary(library,_message));}var message=`\\`${deprecatedAPI}\\` has been deprecated`;if(replacement&&replacement.length){message=`${message} in favor of \\`${replacement}\\``;}if(versionToRemove&&versionToRemove.length){message=`${message} and will be removed in version \"${versionToRemove}\"`;}console.warn(prependLibrary(library,message));}function prependLibrary(library,message){return`${library}: ${message}`;}function codeFromLibrary(library){var code=library.replace(/[-.]/g,'_').toUpperCase();return code;}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}