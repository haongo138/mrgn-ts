{"ast":null,"code":"var slice=Array.prototype.slice;export default function createOrderedCSSStyleSheet(sheet){var groups={};var selectors={};if(sheet!=null){var group;slice.call(sheet.cssRules).forEach(function(cssRule,i){var cssText=cssRule.cssText;if(cssText.indexOf('stylesheet-group')>-1){group=decodeGroupRule(cssRule);groups[group]={start:i,rules:[cssText]};}else{var selectorText=getSelectorText(cssText);if(selectorText!=null){selectors[selectorText]=true;groups[group].rules.push(cssText);}}});}function sheetInsert(sheet,group,text){var orderedGroups=getOrderedGroups(groups);var groupIndex=orderedGroups.indexOf(group);var nextGroupIndex=groupIndex+1;var nextGroup=orderedGroups[nextGroupIndex];var position=nextGroup!=null&&groups[nextGroup].start!=null?groups[nextGroup].start:sheet.cssRules.length;var isInserted=insertRuleAt(sheet,text,position);if(isInserted){if(groups[group].start==null){groups[group].start=position;}for(var i=nextGroupIndex;i<orderedGroups.length;i+=1){var groupNumber=orderedGroups[i];var previousStart=groups[groupNumber].start||0;groups[groupNumber].start=previousStart+1;}}return isInserted;}var OrderedCSSStyleSheet={getTextContent:function getTextContent(){return getOrderedGroups(groups).map(function(group){var rules=groups[group].rules;var marker=rules.shift();rules.sort();rules.unshift(marker);return rules.join('\\n');}).join('\\n');},insert:function insert(cssText,groupValue){var group=Number(groupValue);if(groups[group]==null){var markerRule=encodeGroupRule(group);groups[group]={start:null,rules:[markerRule]};if(sheet!=null){sheetInsert(sheet,group,markerRule);}}var selectorText=getSelectorText(cssText);if(selectorText!=null&&selectors[selectorText]==null){selectors[selectorText]=true;groups[group].rules.push(cssText);if(sheet!=null){var isInserted=sheetInsert(sheet,group,cssText);if(!isInserted){groups[group].rules.pop();}}}}};return OrderedCSSStyleSheet;}function encodeGroupRule(group){return\"[stylesheet-group=\\\"\"+group+\"\\\"]{}\";}var groupPattern=/[\"']/g;function decodeGroupRule(cssRule){return Number(cssRule.selectorText.split(groupPattern)[1]);}function getOrderedGroups(obj){return Object.keys(obj).map(Number).sort(function(a,b){return a>b?1:-1;});}var selectorPattern=/\\s*([,])\\s*/g;function getSelectorText(cssText){var selector=cssText.split('{')[0].trim();return selector!==''?selector.replace(selectorPattern,'$1'):null;}function insertRuleAt(root,cssText,position){try{root.insertRule(cssText,position);return true;}catch(e){return false;}}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}